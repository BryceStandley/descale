@page "/inventory/items"
@using descale.Web.WMS.Admin.Services
@using MudBlazor
@inject InventoryService InventoryService
@inject NavigationManager NavigationManager
@inject ISnackbar Snackbar

<MudText Typo="Typo.h3" Class="mb-4">Inventory Items</MudText>

<MudCard>
    <MudCardHeader>
        <MudStack Row="true" Spacing="2" AlignItems="AlignItems.Center">
            <MudTextField @bind-Value="SearchTerm" Label="Search" Adornment="Adornment.Start" AdornmentIcon="@Icons.Material.Filled.Search" Class="mt-0"></MudTextField>
            <MudSpacer />
            <MudButton Variant="Variant.Filled" Color="Color.Primary" StartIcon="@Icons.Material.Filled.Add" OnClick="@(() => NavigationManager.NavigateTo("/inventory/items/create"))">Add Item</MudButton>
        </MudStack>
    </MudCardHeader>
    <MudCardContent>
        <MudTable Items="@Items" Loading="@IsLoading" Hover="true" @bind-SelectedItem="SelectedItem" Breakpoint="Breakpoint.Sm">
            <HeaderContent>
                <MudTh>SKU</MudTh>
                <MudTh>Name</MudTh>
                <MudTh>Category</MudTh>
                <MudTh>On Hand</MudTh>
                <MudTh>Allocated</MudTh>
                <MudTh>Available</MudTh>
                <MudTh>Actions</MudTh>
            </HeaderContent>
            <RowTemplate>
                <MudTd DataLabel="SKU">@context.Sku</MudTd>
                <MudTd DataLabel="Name">@context.Name</MudTd>
                <MudTd DataLabel="Category">@context.Category</MudTd>
                <MudTd DataLabel="On Hand">@context.QuantityOnHand</MudTd>
                <MudTd DataLabel="Allocated">@context.QuantityAllocated</MudTd>
                <MudTd DataLabel="Available">@context.QuantityAvailable</MudTd>
                <MudTd DataLabel="Actions">
                    <MudIconButton Icon="@Icons.Material.Filled.Visibility" Size="Size.Small" OnClick="@(() => NavigationManager.NavigateTo($"/inventory/items/{context.Id}"))" />
                    <MudIconButton Icon="@Icons.Material.Filled.Edit" Size="Size.Small" OnClick="@(() => NavigationManager.NavigateTo($"/inventory/items/edit/{context.Id}"))" />
                </MudTd>
            </RowTemplate>
            <PagerContent>
                <MudTablePager />
            </PagerContent>
        </MudTable>
    </MudCardContent>
</MudCard>

@code {
    private IEnumerable<InventoryItemDto> Items = new List<InventoryItemDto>();
    private InventoryItemDto SelectedItem;
    private bool IsLoading = true;
    private string SearchTerm = "";
    private Timer _debounceTimer;
    
    protected override async Task OnInitializedAsync()
    {
        await LoadData();
    }
    
    private async Task LoadData()
    {
        IsLoading = true;
        
        try
        {
            Items = await InventoryService.GetInventoryItemsAsync(searchTerm: SearchTerm);
        }
        catch (Exception ex)
        {
            Snackbar.Add($"Error loading inventory items: {ex.Message}", Severity.Error);
        }
        finally
        {
            IsLoading = false;
        }
    }
    
    private void OnSearchChanged(string value)
    {
        _debounceTimer?.Dispose();
        
        _debounceTimer = new Timer(async _ =>
        {
            await InvokeAsync(async () =>
            {
                SearchTerm = value;
                await LoadData();
                StateHasChanged();
            });
        }, null, 300, Timeout.Infinite);
    }
}